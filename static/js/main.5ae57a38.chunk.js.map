{"version":3,"sources":["components/GridComponent.js","shared/colors.js","App.js","serviceWorker.js","index.js"],"names":["RenderColorSelection","props","react_default","a","createElement","reactstrap_es","colors","filter","item","index","startColor","count","map","className","style","padding","key","id","width","onClick","onColorSelect","backgroundColor","color","borderColor","height","changeStartColor","ColorGrid","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","setState","colorStart","pageSize","pagesCount","Math","ceil","state","selectedColor","selectedColorId","colorsPerPage","colorset","allColors","random","h","i","j","k","l","marginBottom","_this2","marginTop","GridComponent_RenderColorSelection","renderColor","outline","onColorClear","onRandomClear","Component","COLORS","Header","toggle","bind","assertThisInitialized","isOpen","randomColor","light","expand","href","src","alt","navbar","type","placeholder","Sidebar","fluid","flex","onRandomSelect","App","_this3","floor","_this4","App_Header","lg","App_Sidebar","GridComponent","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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GAAI,GACJK,MAAM,WAEN,CACAL,GAAI,GACJK,MAAM,WAEN,CACAL,GAAI,GACJK,MAAM,WAEN,CACAL,GAAI,GACJK,MAAM,WAEN,CACAL,GAAI,GACJK,MAAM,WAEN,CACAL,GAAI,GACJK,MAAM,WAEN,CACAL,GAAI,GACJK,MAAM,WAEN,CACAL,GAAI,GACJK,MAAM,WAEN,CACAL,GAAI,GACJK,MAAM,WAEN,CACAL,GAAI,GACJK,MAAM,WAEN,CACAL,GAAI,GACJK,MAAM,WAEN,CACAL,GAAI,GACJK,MAAM,WAEN,CACAL,GAAI,GACJK,MAAM,WAEN,CACAL,GAAI,GACJK,MAAM,WAEN,CACAL,GAAI,GACJK,MAAM,WAEN,CACAL,GAAI,GACJK,MAAM,WAEN,CACAL,GAAI,GACJK,MAAM,WAEN,CACAL,GAAI,GACJK,MAAM,WAEN,CACAL,GAAI,GACJK,MAAM,WAEN,CACAL,GAAI,GACJK,MAAM,WAEN,CACAL,GAAI,GACJK,MAAM,WAEN,CACAL,GAAI,GACJK,MAAM,WAEN,CACAL,GAAI,GACJK,MAAM,WAEN,CACAL,GAAI,GACJK,MAAM,WAEN,CACAL,GAAI,GACJK,MAAM,WAEN,CACAL,GAAI,GACJK,MAAM,WAEN,CACAL,GAAI,GACJK,MAAM,WAEN,CACAL,GAAI,GACJK,MAAM,WAEN,CACAL,GAAI,GACJK,MAAM,WAEN,CACAL,GAAI,GACJK,MAAM,WAEN,CACAL,GAAI,GACJK,MAAM,WAEN,CACAL,GAAI,GACJK,MAAM,WAEN,CACAL,GAAI,GACJK,MAAM,WAEN,CACAL,GAAI,GACJK,MAAM,WAEN,CACAL,GAAI,GACJK,MAAM,WAEN,CACAL,GAAI,GACJK,MAAM,WAEN,CACAL,GAAI,GACJK,MAAM,WAEN,CACAL,GAAI,GACJK,MAAM,WAEN,CACAL,GAAI,GACJK,MAAM,WAEN,CACAL,GAAI,GACJK,MAAM,WAEN,CACAL,GAAI,GACJK,MAAM,WAEN,CACAL,GAAI,GACJK,MAAM,WAEN,CACAL,GAAI,GACJK,MAAM,WAEN,CACAL,GAAI,GACJK,MAAM,WAEN,CACAL,GAAI,GACJK,M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","file":"static/js/main.5ae57a38.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Card, CardText, CardBody, Button, Row, Col, Container } from 'reactstrap';\r\n\r\nconst RenderColorSelection = (props) => {\r\n\r\n    return <Container>\r\n\r\n        <Row>\r\n\r\n    {props.colors.filter((item,index) => index>props.startColor && index<props.startColor + props.count + 1).map((item) => {\r\n        return (\r\n            <div className=\"col-12 col-md-3\" style={{ padding: 20 }}>\r\n            <Card key={item.id} style={{ width: 150 }}\r\n                onClick={() => props.onColorSelect(item, item.id)}>\r\n                <CardBody style={{ backgroundColor: item.color, borderColor: '#333', height: 150 }}></CardBody>\r\n                <CardBody>\r\n                    <CardText>{item.color}</CardText>\r\n                </CardBody>\r\n            </Card>\r\n            </div>\r\n        )\r\n    })}\r\n    </Row>\r\n\r\n    <Row>\r\n        <Col className=\"col-12 m-1 text-center\">\r\n            <Button color=\"link\" onClick={()=>props.changeStartColor(0)}>1</Button>\r\n            <Button color=\"link\" onClick={()=>props.changeStartColor(12)}>2</Button>\r\n            <Button color=\"link\" onClick={()=>props.changeStartColor(24)}>3</Button>\r\n            <Button color=\"link\" onClick={()=>props.changeStartColor(36)}>4</Button>\r\n            <Button color=\"link\" onClick={()=>props.changeStartColor(48)}>5</Button>\r\n            <Button color=\"link\" onClick={()=>props.changeStartColor(60)}>6</Button>\r\n            <Button color=\"link\" onClick={()=>props.changeStartColor(72)}>7</Button>\r\n            <Button color=\"link\" onClick={()=>props.changeStartColor(84)}>8</Button>\r\n            <Button color=\"link\" onClick={()=>props.changeStartColor(96)}>9</Button>\r\n        </Col>\r\n    </Row>\r\n\r\n    </Container>\r\n\r\n}\r\n\r\nclass ColorGrid extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.pageSize = 12;\r\n        this.pagesCount = Math.ceil(100 / this.pageSize);\r\n\r\n        this.state = {\r\n            selectedColor: null,\r\n            selectedColorId: null,\r\n            colorStart: 0,\r\n            colorsPerPage: 12\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.setState({colorset: this.props.colors})\r\n      }\r\n\r\n    changeStartColor=(index)=>{\r\n        this.setState({ colorStart: index });\r\n    }\r\n\r\n    onColorSelect(color, id) {\r\n        this.setState({ selectedColor: color });\r\n        this.setState({ selectedColorId: id });\r\n    }\r\n\r\n    onColorClear() {\r\n        this.setState({ selectedColor: null });\r\n        this.setState({ selectedColorId: null });\r\n    }\r\n\r\n    renderColor(color, allColors) {\r\n\r\n        //console.log(color);\r\n    \r\n        this.state.selectedColorId = (this.props.random != null) ? this.props.random : this.state.selectedColorId;\r\n\r\n        var h = (this.state.selectedColorId-2 === -2) ? 98 : (this.state.selectedColorId-2 === -1) ? 99 : this.state.selectedColorId-2;\r\n        var i = (this.state.selectedColorId-1 === -1) ? 99 : this.state.selectedColorId-1;\r\n        var j = this.state.selectedColorId;\r\n        var k = (this.state.selectedColorId+1 === 100) ? 0 : this.state.selectedColorId+1;\r\n        var l = (this.state.selectedColorId+2 === 101) ? 1 : (this.state.selectedColorId+2 === 100) ? 0 : this.state.selectedColorId+2;\r\n\r\n        if (color != null)\r\n            return(\r\n\r\n                //console.log(h, i, j, k, l),\r\n\r\n                <div className=\"container\">\r\n                    <Card style={{ width: '100%', marginBottom: 50 }}>\r\n                        <CardBody style={{ backgroundColor: allColors[j].color, borderColor: '#333', height: 400 }}></CardBody>\r\n                        <CardBody>\r\n                            <CardText>{allColors[j].color}</CardText>\r\n                        </CardBody>\r\n                    </Card>\r\n\r\n                    <Row>\r\n                        <Col>\r\n                            <Card style={{ width: 120 }}>\r\n                                <CardBody style={{ backgroundColor: allColors[h].color, borderColor: '#333', height: 150 }}></CardBody>\r\n                                <CardBody>\r\n                                    <CardText>{allColors[h].color}</CardText>\r\n                                </CardBody>\r\n                            </Card>\r\n                        </Col><Col>\r\n                            <Card style={{ width: 120 }}>\r\n                                <CardBody style={{ backgroundColor: allColors[i].color, borderColor: '#333', height: 150 }}></CardBody>\r\n                                <CardBody>\r\n                                    <CardText>{allColors[i].color}</CardText>\r\n                                </CardBody>\r\n                            </Card>\r\n                        </Col><Col>\r\n                            <Card style={{ width: 120 }}>\r\n                                <CardBody style={{ backgroundColor: allColors[j].color, borderColor: '#333', height: 150 }}></CardBody>\r\n                                <CardBody>\r\n                                    <CardText>{allColors[j].color}</CardText>\r\n                                </CardBody>\r\n                            </Card>\r\n                        </Col><Col>\r\n                            <Card style={{ width: 120 }}>\r\n                                <CardBody style={{ backgroundColor: allColors[k].color, borderColor: '#333', height: 150 }}></CardBody>\r\n                                <CardBody>\r\n                                    <CardText>{allColors[k].color}</CardText>\r\n                                </CardBody>\r\n                            </Card>\r\n                        </Col><Col>\r\n                            <Card style={{ width: 120 }}>\r\n                                <CardBody style={{ backgroundColor: allColors[l].color, borderColor: '#333', height: 150 }}></CardBody>\r\n                                <CardBody>\r\n                                    <CardText>{allColors[l].color}</CardText>\r\n                                </CardBody>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </div>\r\n\r\n            );\r\n        else\r\n            return(\r\n                <div></div>\r\n            );\r\n    }\r\n\r\n    render() {\r\n        \r\n        if (this.state.selectedColor == null && this.props.random == null)\r\n            return(\r\n            <div className=\"container\">\r\n                <div className=\"row\" style={{marginTop: '20px'}}>\r\n                    <RenderColorSelection onColorSelect={(color, id)=>this.onColorSelect(color, id)} changeStartColor={(color)=>this.changeStartColor(color)} startColor={this.state.colorStart} count={this.state.colorsPerPage} colors={this.props.colors}/>\r\n                </div>\r\n            </div>\r\n            );\r\n        else if (this.state.selectedColor != null && this.props.random == null)\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 col-md-12 m-1\">\r\n                            {this.renderColor(this.state.selectedColor, this.props.colors)}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-12 m-1 text-center\">\r\n                        <Button outline color=\"secondary\" style={{ backgroundColor: 'white', marginTop: '20px', marginBottom: '20px', width: '200px' }}\r\n                            onClick={() => this.onColorClear()}>Clear</Button>\r\n                    </div>\r\n                </div>\r\n            );\r\n\r\n        else if (this.props.random != null)\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 col-md-12 m-1\">\r\n                        {this.renderColor(this.props.random, this.props.colors)}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"col-12 m-1 text-center\">\r\n                    <Button outline color=\"secondary\" style={{ backgroundColor: 'white', marginTop: '20px', marginBottom: '20px', width: '200px' }}\r\n                        onClick={() => this.props.onRandomClear()}>Clear</Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default ColorGrid;","export const COLORS =\r\n    [\r\n        {\r\n            id: 0,\r\n            color:'#000000'\r\n            },\r\n            {\r\n            id: 1,\r\n            color:'#000033'\r\n            },\r\n            {\r\n            id: 2,\r\n            color:'#000066'\r\n            },\r\n            {\r\n            id: 3,\r\n            color:'#000099'\r\n            },\r\n            {\r\n            id: 4,\r\n            color:'#0000cc'\r\n            },\r\n            {\r\n            id: 5,\r\n            color:'#0000ff'\r\n            },\r\n            {\r\n            id: 6,\r\n            color:'#003300'\r\n            },\r\n            {\r\n            id: 7,\r\n            color:'#003333'\r\n            },\r\n            {\r\n            id: 8,\r\n            color:'#003366'\r\n            },\r\n            {\r\n            id: 9,\r\n            color:'#003399'\r\n            },\r\n            {\r\n            id: 10,\r\n            color:'#0033cc'\r\n            },\r\n            {\r\n            id: 11,\r\n            color:'#0033ff'\r\n            },\r\n            {\r\n            id: 12,\r\n            color:'#006600'\r\n            },\r\n            {\r\n            id: 13,\r\n            color:'#006633'\r\n            },\r\n            {\r\n            id: 14,\r\n            color:'#006666'\r\n            },\r\n            {\r\n            id: 15,\r\n            color:'#006699'\r\n            },\r\n            {\r\n            id: 16,\r\n            color:'#0066cc'\r\n            },\r\n            {\r\n            id: 17,\r\n            color:'#0066ff'\r\n            },\r\n            {\r\n            id: 18,\r\n            color:'#009900'\r\n            },\r\n            {\r\n            id: 19,\r\n            color:'#009933'\r\n            },\r\n            {\r\n            id: 20,\r\n            color:'#009966'\r\n            },\r\n            {\r\n            id: 21,\r\n            color:'#009999'\r\n            },\r\n            {\r\n            id: 22,\r\n            color:'#0099cc'\r\n            },\r\n            {\r\n            id: 23,\r\n            color:'#0099ff'\r\n            },\r\n            {\r\n            id: 24,\r\n            color:'#00cc00'\r\n            },\r\n            {\r\n            id: 25,\r\n            color:'#00cc33'\r\n            },\r\n            {\r\n            id: 26,\r\n            color:'#00cc66'\r\n            },\r\n            {\r\n            id: 27,\r\n            color:'#00cc99'\r\n            },\r\n            {\r\n            id: 28,\r\n            color:'#00cccc'\r\n            },\r\n            {\r\n            id: 29,\r\n            color:'#00ccff'\r\n            },\r\n            {\r\n            id: 30,\r\n            color:'#00ff00'\r\n            },\r\n            {\r\n            id: 31,\r\n            color:'#00ff33'\r\n            },\r\n            {\r\n            id: 32,\r\n            color:'#00ff66'\r\n            },\r\n            {\r\n            id: 33,\r\n            color:'#00ff99'\r\n            },\r\n            {\r\n            id: 34,\r\n            color:'#00ffcc'\r\n            },\r\n            {\r\n            id: 35,\r\n            color:'#00ffff'\r\n            },\r\n            {\r\n            id: 36,\r\n            color:'#330000'\r\n            },\r\n            {\r\n            id: 37,\r\n            color:'#330033'\r\n            },\r\n            {\r\n            id: 38,\r\n            color:'#330066'\r\n            },\r\n            {\r\n            id: 39,\r\n            color:'#330099'\r\n            },\r\n            {\r\n            id: 40,\r\n            color:'#3300cc'\r\n            },\r\n            {\r\n            id: 41,\r\n            color:'#3300ff'\r\n            },\r\n            {\r\n            id: 42,\r\n            color:'#333300'\r\n            },\r\n            {\r\n            id: 43,\r\n            color:'#333333'\r\n            },\r\n            {\r\n            id: 44,\r\n            color:'#333366'\r\n            },\r\n            {\r\n            id: 45,\r\n            color:'#333399'\r\n            },\r\n            {\r\n            id: 46,\r\n            color:'#3333cc'\r\n            },\r\n            {\r\n            id: 47,\r\n            color:'#3333ff'\r\n            },\r\n            {\r\n            id: 48,\r\n            color:'#336600'\r\n            },\r\n            {\r\n            id: 49,\r\n            color:'#336633'\r\n            },\r\n            {\r\n            id: 50,\r\n            color:'#336666'\r\n            },\r\n            {\r\n            id: 51,\r\n            color:'#336699'\r\n            },\r\n            {\r\n            id: 52,\r\n            color:'#3366cc'\r\n            },\r\n            {\r\n            id: 53,\r\n            color:'#3366ff'\r\n            },\r\n            {\r\n            id: 54,\r\n            color:'#339900'\r\n            },\r\n            {\r\n            id: 55,\r\n            color:'#339933'\r\n            },\r\n            {\r\n            id: 56,\r\n            color:'#339966'\r\n            },\r\n            {\r\n            id: 57,\r\n            color:'#339999'\r\n            },\r\n            {\r\n            id: 58,\r\n            color:'#3399cc'\r\n            },\r\n            {\r\n            id: 59,\r\n            color:'#3399ff'\r\n            },\r\n            {\r\n            id: 60,\r\n            color:'#33cc00'\r\n            },\r\n            {\r\n            id: 61,\r\n            color:'#33cc33'\r\n            },\r\n            {\r\n            id: 62,\r\n            color:'#33cc66'\r\n            },\r\n            {\r\n            id: 63,\r\n            color:'#33cc99'\r\n            },\r\n            {\r\n            id: 64,\r\n            color:'#33cccc'\r\n            },\r\n            {\r\n            id: 65,\r\n            color:'#33ccff'\r\n            },\r\n            {\r\n            id: 66,\r\n            color:'#33ff00'\r\n            },\r\n            {\r\n            id: 67,\r\n            color:'#33ff33'\r\n            },\r\n            {\r\n            id: 68,\r\n            color:'#33ff66'\r\n            },\r\n            {\r\n            id: 69,\r\n            color:'#33ff99'\r\n            },\r\n            {\r\n            id: 70,\r\n            color:'#33ffcc'\r\n            },\r\n            {\r\n            id: 71,\r\n            color:'#33ffff'\r\n            },\r\n            {\r\n            id: 72,\r\n            color:'#660000'\r\n            },\r\n            {\r\n            id: 73,\r\n            color:'#660033'\r\n            },\r\n            {\r\n            id: 74,\r\n            color:'#660066'\r\n            },\r\n            {\r\n            id: 75,\r\n            color:'#660099'\r\n            },\r\n            {\r\n            id: 76,\r\n            color:'#6600cc'\r\n            },\r\n            {\r\n            id: 77,\r\n            color:'#6600ff'\r\n            },\r\n            {\r\n            id: 78,\r\n            color:'#663300'\r\n            },\r\n            {\r\n            id: 79,\r\n            color:'#663333'\r\n            },\r\n            {\r\n            id: 80,\r\n            color:'#663366'\r\n            },\r\n            {\r\n            id: 81,\r\n            color:'#663399'\r\n            },\r\n            {\r\n            id: 82,\r\n            color:'#6633cc'\r\n            },\r\n            {\r\n            id: 83,\r\n            color:'#6633ff'\r\n            },\r\n            {\r\n            id: 84,\r\n            color:'#666600'\r\n            },\r\n            {\r\n            id: 85,\r\n            color:'#666633'\r\n            },\r\n            {\r\n            id: 86,\r\n            color:'#666666'\r\n            },\r\n            {\r\n            id: 87,\r\n            color:'#666699'\r\n            },\r\n            {\r\n            id: 88,\r\n            color:'#6666cc'\r\n            },\r\n            {\r\n            id: 89,\r\n            color:'#6666ff'\r\n            },\r\n            {\r\n            id: 90,\r\n            color:'#669900'\r\n            },\r\n            {\r\n            id: 91,\r\n            color:'#669933'\r\n            },\r\n            {\r\n            id: 92,\r\n            color:'#669966'\r\n            },\r\n            {\r\n            id: 93,\r\n            color:'#669999'\r\n            },\r\n            {\r\n            id: 94,\r\n            color:'#6699cc'\r\n            },\r\n            {\r\n            id: 95,\r\n            color:'#6699ff'\r\n            },\r\n            {\r\n            id: 96,\r\n            color:'#66cc00'\r\n            },\r\n            {\r\n            id: 97,\r\n            color:'#66cc33'\r\n            },\r\n            {\r\n            id: 98,\r\n            color:'#66cc66'\r\n            },\r\n            {\r\n            id: 99,\r\n            color:'#66cc99'\r\n            }\r\n    ];","import React, { Component } from 'react';\nimport './App.css';\nimport { Button, Container, Row, Col, Collapse, Navbar, NavbarToggler, NavbarBrand, Nav, NavItem, Input } from 'reactstrap';\nimport ColorGrid from './components/GridComponent';\nimport { COLORS } from './shared/colors';\n\nclass Header extends Component {\n  constructor(props) {\n      super(props);\n  \n      this.toggle = this.toggle.bind(this);\n      this.state = {\n        isOpen: false,\n        randomColor: null\n      };\n    }\n\n    toggle() {\n      this.setState({\n        isOpen: !this.state.isOpen\n      });\n    }\n\n    render() {\n      return (\n        <div>\n          <Navbar color=\"dark\" light expand=\"md\">\n            <NavbarBrand href=\"/\"><img src=\"/assets/logo.png\" alt=\"New Engen logo\"></img></NavbarBrand>\n            <NavbarToggler onClick={this.toggle} />\n            <Collapse isOpen={this.state.isOpen} navbar>\n              <Nav className=\"ml-auto\" navbar>\n                <NavItem>\n                  <Input type=\"text\" placeholder=\"Search\" />\n                </NavItem>\n              </Nav>\n            </Collapse>\n          </Navbar>\n        </div>\n      );\n    }\n  }\n\n  class Sidebar extends Component {\n  \n    render() {\n      return (\n          <Container fluid style={{ flex: 1 }}>\n              <Row>\n                  <Col style={{ backgroundColor: '#d6d8d8' }}>\n                      \n                      <Button outline color=\"secondary\" \n                        style={{ backgroundColor: 'white', marginTop: '20px', marginBottom: '20px' }}\n                        onClick={() => this.props.onRandomSelect()}\n                        >\n                          Random Color</Button>\n\n                      <p>Red</p>\n                      <p>Orange</p>\n                      <p>Yellow</p>\n                      <p>Green</p>\n                      <p>Blue</p>\n                      <p>Purple</p>\n                      <p>Brown</p>\n                      <p>Grey</p>\n                  </Col>\n              </Row>\n          </Container>\n      );\n    }\n  }\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      colors: COLORS,\n      random: null\n    };\n  }\n\n  onRandomSelect() {\n    this.setState({ random: Math.floor(Math.random() * 100) });\n    //console.log(this.state.random);\n  }\n\n  onRandomClear() {\n    this.setState({ random: null });\n    //console.log(this.state.random);\n  }\n\n  render() {\n    \n    return (\n        <div>\n          <Header />\n            <Row>\n              <Col lg=\"2\">\n                <Sidebar onRandomSelect={() => this.onRandomSelect()}/>\n              </Col>\n              <Col lg=\"10\">\n                <ColorGrid colors={this.state.colors} random={this.state.random} onRandomClear={() => this.onRandomClear()}/>\n              </Col>\n            </Row>\n        </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}